/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kck.GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.Timer;
import kck.models.Object;
import kck.models.Goal;
import kck.models.Character;
import kck.models.Sentence;
import kck.prolog.PrologManager;

/**
 *
 * @author arkus & Shir
 */
public class MainWindow extends javax.swing.JFrame {
    private String inputLog = "";
    private PrologManager pm = new PrologManager();
    private List<Goal> goals;
    private Character character;
    private List<Integer> exclude;
    private List<JLabel> icons;
    private final int DELAY_TIME = 5;
    private int timer1 = 0;
    private int timer2 = 0;
    
    ActionListener inputBlockade = new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            testButton.setEnabled(false);
            userInput.setEnabled(false);
            timer1--;
            timer2--;
            System.out.println(timer1+ " " + timer2);
            if(timer1 <= 0 && timer2 <= 0){
                testButton.setEnabled(true);
                userInput.setEnabled(true);
                ((Timer)evt.getSource()).stop(); 
            }
        }
    };
    
      
    
    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {
        initComponents();
        goals = new ArrayList<>();
        exclude = new ArrayList<>();
        icons = new ArrayList<>();
        
        icons.add(goal1);
        icons.add(goal2);
        icons.add(goal3);
        icons.add(goal4);
        icons.add(goal5);
        icons.get(0).setLocation(0, 0);
        icons.get(1).setLocation(128, 0);
        icons.get(2).setLocation(128, 128);
        icons.get(3).setLocation(256, 0);
        icons.get(4).setLocation(256, 128);
      
//        goals.add(new Goal("Tree", tree));
//        goals.add(new Goal("stone", stone));
//        goals.add(new Goal("Church", church));
//        goals.add(new Goal("Lamp", lamp));
//        character = new Character("Character", testCharacter);

        goals.add(new Goal("Tree", goal1));
        goals.add(new Goal("Mountain", goal2));
        goals.add(new Goal("House", goal3));
        goals.add(new Goal("Lamp", goal4));
        character = new Character("Character", goal5);
        testLayer1.setLayer(goal5,10);
        
//        for (int i = 0; i < goals.size();i++){
//            System.err.println(goals.get(i).getName()+ " : " +goals.get(i).getX() + " " + goals.get(i).getY());
//        }
//         System.err.println("Character: " +character.getX() + " " + character.getY());
//        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userInput = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        userOutput = new javax.swing.JTextArea();
        testLayer1 = new javax.swing.JLayeredPane();
        goal1 = new javax.swing.JLabel();
        goal2 = new javax.swing.JLabel();
        goal3 = new javax.swing.JLabel();
        goal4 = new javax.swing.JLabel();
        goal5 = new javax.swing.JLabel();
        testButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 700));
        setResizable(false);

        userInput.setText("Polecenie: ");
        userInput.setToolTipText("test");
        userInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userInputFocusLost(evt);
            }
        });
        userInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInputActionPerformed(evt);
            }
        });

        userOutput.setEditable(false);
        userOutput.setColumns(20);
        userOutput.setRows(5);
        jScrollPane2.setViewportView(userOutput);

        goal1.setText("jLabel1");
        testLayer1.add(goal1);
        goal1.setBounds(334, 197, 64, 64);

        goal2.setText("jLabel1");
        testLayer1.add(goal2);
        goal2.setBounds(208, 21, 64, 64);

        goal3.setText("jLabel1");
        testLayer1.add(goal3);
        goal3.setBounds(322, 95, 64, 64);

        goal4.setText("jLabel1");
        testLayer1.add(goal4);
        goal4.setBounds(334, 11, 64, 64);

        goal5.setText("jLabel1");
        testLayer1.add(goal5);
        goal5.setBounds(199, 115, 64, 64);

        testButton.setText("Reload");
        testButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(testLayer1)
                        .addGap(68, 68, 68))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(testButton, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                            .addComponent(userInput))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testLayer1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private boolean goalExist(String goal){
        for (int i = 0; i < goals.size() ; i++){
            System.out.println(goals.get(i).getName());
            System.out.println(pm.getResult(userInput.getText()).toString());
            if (goals.get(i).getName().equalsIgnoreCase(goal)) {
                character.setMoveX(difMove(character.getX(), goals.get(i).getX()));
                character.setMoveY(difMove(character.getY(), goals.get(i).getY()));
                timer1 = Math.abs(character.getMoveX());
                timer2 = Math.abs(character.getMoveY());                
                System.out.println("X = " + character.getMoveX() + " Y = " + character.getMoveY());
                return true; 
            }
        }        
        return false;
    }
    
    private void userInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInputActionPerformed

        //ustawienie odległosci o którą mamy się poruszyć
               
        if (goalExist(pm.getResult(userInput.getText()).getGoal())){
            inputLog = inputLog + "\n" + userInput.getText();
            userOutput.setText(inputLog);
            
            character.moveStraightToGoal(); //start timera
            new Timer(DELAY_TIME, inputBlockade).start();
            
            userInput.setText("");
        } else {
        inputLog = inputLog + "\n" + userInput.getText(); 
        userOutput.setText(inputLog);
        userInput.setText("");
        
        }
        



    }//GEN-LAST:event_userInputActionPerformed

    private void userInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userInputFocusGained
        // TODO add your handling code here:
        userInput.setText("");
    }//GEN-LAST:event_userInputFocusGained

    private void userInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userInputFocusLost
        // TODO add your handling code here:
        userInput.setText("Polecenie: ");
    }//GEN-LAST:event_userInputFocusLost

    private void testButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testButtonMouseClicked
        // wylosowanie nowych lokalizacji
        int z=0; 
        
        //ustawienie lokazliacji w orginalnych miejscach
        icons.get(0).setLocation(0, 0);
        icons.get(1).setLocation(128, 0);
        icons.get(2).setLocation(128, 128);
        icons.get(3).setLocation(256, 0);
        icons.get(4).setLocation(256, 128);
            
//        character.setLocation(randInt(0, x), randInt(0, y)); //lowoanie współrzędnych dla agenta             
//        for(int j = 0; j < goals.size(); j++) {
//            goals.get(j).setLocation(randInt(0, x), randInt(0, y));//losowanie współrzędnych celu
//        }
        
        z = randInt(0, 4);                                                      //losowanie liczby z zakresu ilości labeli     
        exclude.add(z);                                                         // dodanie wylosowanej liczby do zbioru liczb zuzytych
        character.setLabel(icons.get(z));                                       //ustawienie postaci nowego labela
        character.setLocation(icons.get(z).getX(), icons.get(z).getY());        //ustawienie postaci nowej pozycji
        testLayer1.setLayer(icons.get(z), 10);                                  //ustawienie postaci nowej pozycji, aby była widoczna nad innymi
        for(int j = 0; j < goals.size(); j++) {                                 //przydzielanie nowej lokalizacji kazdemu celowi po kolei
            while(exclude.contains(z)){                                         //dopóki nie wylosuje liczby, która jeszcze ani razu sie nie pojawiła
                z = randInt(0,4); 
            }
            exclude.add(z);                                                     //dodanie do zbioru wykloczonych
            goals.get(j).setLabel(icons.get(z));                                //ustawienie celowi nowego labela
            testLayer1.setLayer(icons.get(z),5);                                // ustawienie nowego poziomu aby cele były pod postacią
            goals.get(j).setLocation(icons.get(z).getX(), icons.get(z).getY()); //ustawienie nowej lokazlicaji
        }
        exclude.clear();                                                        //wyczyszczenie listy wykluczonych liczb
//        for (int i = 0; i < goals.size();i++){
//            System.err.println(goals.get(i).getName()+ " : " +goals.get(i).getX() + " " + goals.get(i).getY());
//        }
//        System.err.println("Character: " +character.getX() + " " + character.getY());
    }//GEN-LAST:event_testButtonMouseClicked

    
    public static int randInt(int min, int max) {
    Random rand = new Random();
    int randomNum = rand.nextInt((max - min) + 1) + min;
    return randomNum;
}
    
    private int difMove(int charPos, int goalPos){ 
        // wyliczenie odległości między puntami na tej samej osi;
        return charPos - goalPos;
    }
    
  
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel goal1;
    private javax.swing.JLabel goal2;
    private javax.swing.JLabel goal3;
    private javax.swing.JLabel goal4;
    private javax.swing.JLabel goal5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton testButton;
    private javax.swing.JLayeredPane testLayer1;
    private javax.swing.JTextField userInput;
    private javax.swing.JTextArea userOutput;
    // End of variables declaration//GEN-END:variables
}
