/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kck.GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.Timer;
import kck.models.Goal;
import kck.models.Sentence;
import kck.prolog.PrologManager;

/**
 *
 * @author arkus & Shir
 */
public class MainWindow extends javax.swing.JFrame {
    private String inputLog = "";
    public static String[][] things = new String[3][3];
    private int moveX;
    private int moveY;
    private PrologManager pm = new PrologManager();
    private List<Goal> goals;
    private Goal character;
    private final int DELAY_TIME = 5;
    
    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {
        initComponents();
        character = new Goal("Character", testCharacter);
        goals = new ArrayList<>();
        goals.add(new Goal("Tree", tree));
        goals.add(new Goal("stone", stone));
        goals.add(new Goal("Church", church));
        goals.add(new Goal("Lamp", lamp));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userInput = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        userOutput = new javax.swing.JTextArea();
        testLayer1 = new javax.swing.JLayeredPane();
        tree = new javax.swing.JLabel();
        testCharacter = new javax.swing.JLabel();
        stone = new javax.swing.JLabel();
        church = new javax.swing.JLabel();
        lamp = new javax.swing.JLabel();
        testButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        userInput.setText("Polecenie: ");
        userInput.setToolTipText("test");
        userInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userInputFocusLost(evt);
            }
        });
        userInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInputActionPerformed(evt);
            }
        });

        userOutput.setEditable(false);
        userOutput.setColumns(20);
        userOutput.setRows(5);
        jScrollPane2.setViewportView(userOutput);

        tree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kck/GUI/tree.PNG"))); // NOI18N

        testCharacter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        testCharacter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kck/GUI/char.png"))); // NOI18N

        stone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kck/GUI/stone.PNG"))); // NOI18N

        church.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kck/GUI/church.png"))); // NOI18N

        lamp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kck/GUI/lamp.png"))); // NOI18N

        testLayer1.setLayer(tree, javax.swing.JLayeredPane.DEFAULT_LAYER);
        testLayer1.setLayer(testCharacter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        testLayer1.setLayer(stone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        testLayer1.setLayer(church, javax.swing.JLayeredPane.DEFAULT_LAYER);
        testLayer1.setLayer(lamp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout testLayer1Layout = new javax.swing.GroupLayout(testLayer1);
        testLayer1.setLayout(testLayer1Layout);
        testLayer1Layout.setHorizontalGroup(
            testLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testLayer1Layout.createSequentialGroup()
                .addGroup(testLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(testLayer1Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(testCharacter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(church))
                    .addGroup(testLayer1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(stone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                        .addComponent(tree)))
                .addGap(314, 314, 314))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testLayer1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lamp)
                .addGap(210, 210, 210))
        );
        testLayer1Layout.setVerticalGroup(
            testLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, testLayer1Layout.createSequentialGroup()
                .addGroup(testLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testLayer1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(tree))
                    .addGroup(testLayer1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(stone)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(testLayer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testCharacter, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(church, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(29, 29, 29)
                .addComponent(lamp)
                .addGap(52, 52, 52))
        );

        testButton.setText("Reload");
        testButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(testLayer1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(testButton, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                            .addComponent(userInput))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testLayer1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ActionListener taskPerformer = new ActionListener() {
         public void actionPerformed(ActionEvent evt) { // po tym kod który ma się wykonać co odstęp czasu          
          testButton.setEnabled(false);
          userInput.setEnabled(false);
            //System.out.println(moveX+ " " + moveY);
            if (moveX != 0){
               if (moveX > 0){
                    moveX = moveX - 1;
                    character.setLocation(character.getX() - 1, character.getY());
                }
                if (moveX < 0){
                    moveX = moveX + 1;
                    character.setLocation(character.getX() + 1, character.getY());
                }
            }
          
            if (moveY != 0){
                if (moveY > 0){
                  moveY = moveY - 1;
                  character.setLocation(character.getX(), character.getY() - 1);
                 }
                if (moveY < 0){
                  moveY = moveY + 1;
                  character.setLocation(character.getX(), character.getY() + 1);
                }
             }
          
            if (moveY ==0 && moveX == 0){ //aktualnie idzie to Y celu testowego moveY ==0 && moveX == 0
              testButton.setEnabled(true);
              userInput.setEnabled(true);
              ((Timer)evt.getSource()).stop();          //zatrzymuje timer
          
            }
         }
        };
    
    private boolean goalExist(String goal){
        for (int i = 0; i < goals.size() ; i++){
            System.out.println(goals.get(i).getName());
            System.out.println(pm.getResult(userInput.getText()).toString());
            if (goals.get(i).getName().equalsIgnoreCase(goal)) {
                moveX = difMove(character.getX(), goals.get(i).getX());
                moveY = difMove(character.getY(), goals.get(i).getY());  
                System.out.println("X = " + moveX + " Y = " + moveY);
                return true; 
            }
        }        
        return false;
    }
    
    private void userInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInputActionPerformed
       // wsadzenie do tablicy rzeczy, naszego celu i agenta
       /*
        things[0][0] = "Character";
        things[0][1] = Integer.toString(testCharacter.getX());
        things[0][2] = Integer.toString(testCharacter.getY());
        things[1][0] = "Church";
        things[1][1] = Integer.toString(Church.getX());
        things[1][2] = Integer.toString(Church.getY());
        things[2][0] = "Lamp";
        things[2][1] = Integer.toString(Lamp.getX());
        things[2][2] = Integer.toString(Lamp.getY());
       */
        testLayer1.setLayer(testCharacter, 3);
        testLayer1.setLayer(tree, 2);
        testLayer1.setLayer(stone, 1);
        //ustawienie odległosci o którą mamy się poruszyć
               
        if (goalExist(pm.getResult(userInput.getText()).getGoal())){
            inputLog = inputLog + "\n" + userInput.getText();
            userOutput.setText(inputLog);
            new Timer(DELAY_TIME, taskPerformer).start(); //start timera
            userInput.setText("");
        } else {
        inputLog = inputLog + "\n" + userInput.getText(); 
        userOutput.setText(inputLog);
        userInput.setText("");
        
        }
        



    }//GEN-LAST:event_userInputActionPerformed

    private void userInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userInputFocusGained
        // TODO add your handling code here:
        userInput.setText("");
    }//GEN-LAST:event_userInputFocusGained

    private void userInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userInputFocusLost
        // TODO add your handling code here:
        userInput.setText("Polecenie: ");
    }//GEN-LAST:event_userInputFocusLost

    private void testButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testButtonMouseClicked
        // wylosowanie nowych lokalizacji
        int x,y;
        x = testLayer1.getWidth()-64;
        y = testLayer1.getHeight()-64;                 
        
        character.setLocation(randInt(0, x), randInt(0, y)); //lowoanie współrzędnych dla agenta             
        for(int i = 0; i < goals.size(); i++) {
            goals.get(i).setLocation(randInt(0, x), randInt(0, y));//losowanie współrzędnych celu
        }
    }//GEN-LAST:event_testButtonMouseClicked

    
    public static int randInt(int min, int max) {
    Random rand = new Random();
    int randomNum = rand.nextInt((max - min) + 1) + min;
    return randomNum;
}
    
    private int difMove(int charPos, int goalPos){ 
        // wyliczenie odległości między puntami na tej samej osi;
        return charPos - goalPos;
    }
    
  
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel church;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lamp;
    private javax.swing.JLabel stone;
    private javax.swing.JButton testButton;
    private javax.swing.JLabel testCharacter;
    private javax.swing.JLayeredPane testLayer1;
    private javax.swing.JLabel tree;
    private javax.swing.JTextField userInput;
    private javax.swing.JTextArea userOutput;
    // End of variables declaration//GEN-END:variables
}
